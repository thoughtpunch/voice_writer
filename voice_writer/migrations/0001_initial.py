# Generated by Django 5.0.7 on 2024-08-19 21:00

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50)),
                ('pen_name', models.CharField(blank=True, max_length=50, null=True)),
                ('pronouns', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('show_date_of_birth', models.BooleanField(default=False)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True)),
                ('education', models.CharField(blank=True, max_length=255, null=True)),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('notable_works', models.TextField(blank=True, null=True)),
                ('genres', models.TextField(blank=True, null=True)),
                ('influences', models.TextField(blank=True, null=True)),
                ('portrait', models.ImageField(blank=True, null=True, upload_to='user_uploads/images')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manuscript',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('book', 'Book'), ('research paper', 'Research Paper'), ('article', 'Article'), ('essay', 'Essay'), ('blog post', 'Blog Post'), ('thesis', 'Thesis'), ('short story', 'Short Story'), ('poem', 'Poem'), ('script', 'Script'), ('play', 'Play'), ('review', 'Review'), ('report', 'Report'), ('letter', 'Letter'), ('manual', 'Manual'), ('guide', 'Guide'), ('other', 'Other')], default='book', max_length=50)),
                ('genre', models.CharField(choices=[('fiction', 'Fiction'), ('non_fiction', 'Non-Fiction'), ('mystery', 'Mystery'), ('science_fiction', 'Science Fiction'), ('fantasy', 'Fantasy'), ('biography', 'Biography'), ('history', 'History'), ('romance', 'Romance'), ('horror', 'Horror'), ('thriller', 'Thriller'), ('self_help', 'Self-Help'), ('philosophy', 'Philosophy'), ('poetry', 'Poetry'), ('drama', 'Drama'), ('adventure', 'Adventure'), ('science', 'Science'), ('religion', 'Religion'), ('travel', 'Travel'), ('humor', 'Humor'), ('cooking', 'Cooking'), ('art', 'Art'), ('music', 'Music'), ('education', 'Education'), ('children', 'Children'), ('multi_genre', 'Multi-genre'), ('other', 'Other')], default='fiction', max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voice_writer.author')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('cover', 'Cover'), ('title page', 'Title Page'), ('copyright page', 'Copyright Page'), ('dedication', 'Dedication'), ('table of contents', 'Table of Contents'), ('foreword', 'Foreword'), ('preface', 'Preface'), ('acknowledgments', 'Acknowledgments'), ('introduction', 'Introduction'), ('prologue', 'Prologue'), ('chapter', 'Chapter'), ('epilogue', 'Epilogue'), ('afterword', 'Afterword'), ('appendix', 'Appendix'), ('glossary', 'Glossary'), ('bibliography', 'Bibliography'), ('index', 'Index'), ('about the author', 'About the Author'), ('abstract', 'Abstract'), ('executive summary', 'Executive Summary'), ('literature review', 'Literature Review'), ('methodology', 'Methodology'), ('results', 'Results'), ('discussion', 'Discussion'), ('conclusion', 'Conclusion'), ('references', 'References'), ('annexes', 'Annexes'), ('acknowledgements', 'Acknowledgements'), ('character list', 'Character List'), ('act', 'Act'), ('scene', 'Scene'), ('cast list', 'Cast List'), ('stage directions', 'Stage Directions'), ('other', 'Other')], default='chapter', max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='voice_writer.manuscript')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('content', models.TextField(blank=True, null=True)),
                ('content_json', models.JSONField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='voice_writer.manuscript')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='voice_writer.section')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='VoiceRecording',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('audio_source', models.CharField(choices=[('app', 'App'), ('upload', 'Upload'), ('api', 'API')], default='app', max_length=10)),
                ('duration_ms', models.BigIntegerField(blank=True, null=True)),
                ('recorded_at', models.DateTimeField(blank=True, null=True)),
                ('bitrate', models.IntegerField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=50, null=True)),
                ('file', models.FileField(blank=True, upload_to='user_uploads/voice')),
                ('is_processed', models.BooleanField(default=False)),
                ('keywords', models.JSONField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('segment_count', models.PositiveBigIntegerField(blank=True, default=1, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='manuscript',
            name='recording',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='voice_writer.voicerecording'),
        ),
        migrations.CreateModel(
            name='VoiceSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='user_uploads/voice_segments')),
                ('duration_ms', models.BigIntegerField(blank=True, null=True)),
                ('start_time_ms', models.BigIntegerField(blank=True, null=True)),
                ('end_time_ms', models.BigIntegerField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('is_processed', models.BooleanField(default=False)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='voice_writer.voicerecording')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='VoiceTranscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(default='whisper', max_length=255)),
                ('transcription', models.TextField(blank=True, null=True)),
                ('srt_subtitles', models.TextField(blank=True, null=True)),
                ('keywords', models.JSONField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcriptions', to='voice_writer.voicerecording')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
